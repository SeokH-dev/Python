class Node():
    def __init__(self, d = None):
        self.data = d
        self.right = None
        self.left = None

class DoubleLinkedList():
    def __init__(self):
        self.head = None
        self.tail = None

    def add(self, d = None):
        newNode = Node(d)
        if self.head is not None:
            current = self.head
            while current.right is not None:
                current = current.right
            current.right = newNode
            newNode.left = current
            self.tail = newNode
        else:
            self.head = newNode
    
    def printAll(self, r = None):
        if r != "reverse":
            current = self.head
            while current.right is not None:
                print(current.data)
                current = current.right
            print(current.data)
        else:
            current = self.tail
            while current.left is not None:
                print(current.data)
                current = current.left
            print(current.data)

    def insert(self, order = None, d = None):
        current = self.head
        newNode = Node(d)
        for i in range(0, order):
            current = current.right
        next = current.right
        current.right = newNode
        newNode.left = current
        newNode.right = next
        next.left = newNode
    
new = DoubleLinkedList()
new.add("하나")
new.add("둘")
new.add("삼")
new.add("넷")
new.add("오")
new.add("여섯")
new.add("칠")
new.add("팔")

new.insert(2, "삼쩜오")

new.printAll()
